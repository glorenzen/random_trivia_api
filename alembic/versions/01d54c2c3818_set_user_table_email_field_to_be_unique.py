"""Set User table email field to be unique

Revision ID: 01d54c2c3818
Revises: 5143e38545da
Create Date: 2025-03-19 17:11:04.933810

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "01d54c2c3818"
down_revision: Union[str, None] = "5143e38545da"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("question", schema=None) as batch_op:
        batch_op.alter_column("category_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column(
            "difficulty_id", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.create_foreign_key(None, "difficulty", ["difficulty_id"], ["id"])
        batch_op.create_foreign_key(None, "category", ["category_id"], ["id"])

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index("ix_user_email")
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_email"))
        batch_op.create_index("ix_user_email", ["email"], unique=False)

    with op.batch_alter_table("question", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.alter_column(
            "difficulty_id", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column("category_id", existing_type=sa.INTEGER(), nullable=True)

    # ### end Alembic commands ###
